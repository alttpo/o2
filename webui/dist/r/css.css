@font-face {
    font-family: Triforce;
    src: url(/r/Triforce.ttf) format('truetype');
}

@font-face {
    font-family: Rokkitt;
    src: url(/r/Rokkitt-VariableFont_wght.ttf) format('truetype');
}

* {
    box-sizing: border-box;
}

html, select, option, button, input {
    font-family: Rokkitt, sans-serif;
    font-size: 18px;
}

body {
    margin: 0;
    height: calc(100vh - 2em - 8px);
    background-image: linear-gradient(rgba(0, 0, 0, 0.6), rgba(0, 0, 0, 0.6)), url(/r/bg.png);
    background-color: black;
    background-position: center top;
    background-repeat: repeat-y;
    background-size: cover;
}

#app {
    height: 100%;
}

#main-wrapper {
    min-height: 100%;
}

footer {
    height: 2em;
    width: 100%;
}

header {
    margin-top: 4px;
    width: 100%;
}

html, select, option, input:not([type=submit]) {
    color: lightgray;
    text-shadow: -1px -1px 0 #333,
    1px -1px 0 #333,
    -1px 1px 0 #333,
    1px 1px 0 #333;
}

form {
    display: inline-flex;
}

form > input[type=submit] {
    flex: 1;
}

input[type="file"] {
    overflow: hidden;
    padding: 1px;
    white-space: nowrap;
}

a {
    color: #ffef00;
}

button, input[type=submit] {
    font-weight: 500;
    padding: 4px 16px 4px 16px; /* top right bottom left */
    border-radius: 4px;
    border-top: 1px solid rgba(0, 0, 0, 0.5);
    border-left: 1px solid rgba(0, 0, 0, 0.5);
    border-right: 2px solid rgba(0, 0, 0, 0.5);
    border-bottom: 2px solid rgba(0, 0, 0, 0.5);
    cursor: pointer;
}

button:active, input[type=submit]:active {
    border-right: 1px solid rgba(0, 0, 0, 0.5);
    border-bottom: 1px solid rgba(0, 0, 0, 0.5);
    padding-right: 16px;
    margin-right: 2px;
    padding-bottom: 4px;
    margin-bottom: 2px;
}

select, input:not([type=submit]) {
    background-color: #444;
    color: lightgray;
    font-family: Rokkitt, sans-serif;
    font-weight: 500;
    padding: 0.25em 0.25em 0.25em 0.25em; /* top right bottom left */
    border-radius: 0.5em;
    border-top: 1px solid rgba(0, 0, 0, 0.5);
    border-left: 1px solid rgba(0, 0, 0, 0.5);
    border-right: 2px solid rgba(0, 0, 0, 0.5);
    border-bottom: 2px solid rgba(0, 0, 0, 0.5);
    font-kerning: auto;
}

input[readonly=true] {
    background-color: #252525;
    color: #999;
}

select:disabled, input:disabled, button:disabled {
    background-color: #333;
    color: #666;
    border-color: #666;
    cursor: not-allowed;
}

h2, h3, h4, h5, h6 {
    font-family: Rokkitt, sans-serif;
    font-weight: normal;
    margin: 0;
}

h1 {
    font-family: Triforce, sans-serif;
    font-weight: normal;
    margin: 0;
    font-size: 1.5rem;
    text-align: center
}

h2 {
    font-size: 1.5rem;
}

h3 {
    font-size: 1.33rem;
}

h4 {
    font-size: 1.25rem;
}

h5, h6 {
    font-size: 1.1rem;
}

.squeeze {
    margin-top: 4px;
    margin-left: 6px;
    margin-right: 6px;
}

.rounded {
    border: 0.125rem solid #511;
    border-radius: 0.5rem;
}

.darken {
    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
    backdrop-filter: blur(5px);
}

.padded {
    padding: 6px;
}

.padded-lr {
    padding: 0 6px 0 6px;
}

.mono {
    font-family: monospace;
    white-space: pre;
}

.no-padding-margin {
    padding: 0;
    margin: 0;
}

/* Tabbed interface: */

.tabbed {
    min-height: 100px;
    margin: 0.6em 0;
    width: 100%;
    display: flex;
    /* allows for tabs to be next to each other */
    position: relative;
    /* relative here contains the width of the content */
}

.tab {
    flex: 1;
}

.tab > label {
    cursor: pointer;
    font-size: 1.5rem;
    text-transform: uppercase;
    padding: 0.25em 0.5em 0 0.5em;
    border: 0.125rem solid #511;
    border-radius: 0.5rem 0.5rem 0 0;
    border-bottom: none;
    display: block;
}

.tab > input[type='radio']:checked + label {
    border-color: #151;
    background: linear-gradient(rgba(1, 1, 1, 0.35), rgba(1, 1, 1, 0.35));
    backdrop-filter: blur(5px);
}

.tab > input[type='radio']:not(:checked) + label {
    background: linear-gradient(rgba(0, 0, 0, 0.75), rgba(0, 0, 0, 0.75));
    backdrop-filter: blur(5px);
}

.tab > input[type='radio'] {
    display: none;
    /* this makes the radio buttons disappear - we are only keeping track if they are checked or not */
}

.tab > input[type='radio']:not(:checked) ~ .content {
    display: none;
}

/* This allows the selected tab to be on top */
.tab > input[type='radio']:checked + label + .content {
    z-index: 1;
}

.flex-wrap {
    display: flex;
    flex-flow: wrap;
    position: relative;
}

.flex-1 {
    flex: 1;
}

.flex-wrap hr {
    width: 100%;
    flex-basis: 100%;
    height: 0;
    margin: 0;
    border: 0;
}

.content {
    padding: 6px;
    margin-top: 4px;
    /*position: absolute;*/
    left: 0;
    right: 0;
    /* the left and right at 0 help the tabs to overlap each other */
    border: 0.125rem solid #511;
    border-radius: 0 0 0.5rem 0.5rem;
    background: linear-gradient(rgba(0, 0, 0, 0.5), rgba(0, 0, 0, 0.5));
    backdrop-filter: blur(5px);
}

.grid {
    display: grid;
    grid-auto-rows: 1.8em;
    grid-row-gap: 0.1em;
    grid-column-gap: 0.2em;
}

.grid > label {
    padding-top: 6px;
    white-space: nowrap;
}

.collapsible.collapsed > *:not(:first-child) {
    display: none;
}

.collapse-icon {
    float: right;
    cursor: pointer;
}

/* tooltips */
.react-hint {
    padding: 5px;
    position: absolute;
    z-index: 9999;
    cursor: default;
    animation: .5s fadeIn;
}

.react-hint__content {
    width: 18em;
    padding: 10px;
    border-radius: 5px;
    background: #000;
    color: #fff;
}

.react-hint:after {
    content: '';
    width: 0;
    height: 0;
    margin: auto;
    display: block;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    border: 5px solid transparent;
}

.react-hint--top:after {
    top: auto;
    border-bottom: none;
    border-top-color: #000;
}

.react-hint--left:after {
    left: auto;
    border-right: none;
    border-left-color: #000;
}

.react-hint--right:after {
    right: auto;
    border-left: none;
    border-right-color: #000;
}

.react-hint--bottom:after {
    bottom: auto;
    border-top: none;
    border-bottom-color: #000;
}

@keyframes fadeIn {
    from {
        opacity: 0;
    }

    to {
        opacity: 1;
    }
}
